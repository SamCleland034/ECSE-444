


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             test, CODE, READONLY
    2 00000000         
    3 00000000                 export           asm_variance ; label must be ex
                                                            ported if it is to 
                                                            be used as a functi
                                                            on in C
    4 00000000         asm_variance
    5 00000000         
    6 00000000 B430            PUSH{R4,         R5}         ; saving context ac
                                                            cording to calling 
                                                            convention since us
                                                            ing R4, R5 
    7 00000002 460C            MOV              R4, R1      ; counter for loop
    8 00000004 EE03 4A90       VMOV.f32         S7, R4      ; use as a floating
                                                             point number when 
                                                            dividing
    9 00000008 EEF8 3AE3       VCVT.f32.s32     S7, S7      ; have to convert t
                                                            o floating point fr
                                                            om signed integer
   10 0000000C ED9F 2A11       VLDR.f32         S4, =0      ; load floating poi
                                                            nt value, used as m
                                                            ean
   11 00000010 EDDF 2A10       VLDR.f32         S5, =0      ; load floating poi
                                                            nt value, used as v
                                                            ariance
   12 00000014 4605            MOV              R5, R0      ; load another regi
                                                            ster for second loo
                                                            p iteration, don't 
                                                            have to reset manua
                                                            lly
   13 00000016         loop
   14 00000016 1E64            SUBS             R4, R4, #1  ; loop counter (N =
                                                             N-1)
   15 00000018 DB06            BLT              continue    ; loop has finished
                                                            ?
   16 0000001A ED90 0A00       VLDR.f32         S0, [R0]    ; load array value 
                                                            into memory
   17 0000001E EE32 2A00       VADD.f32         S4, S4, S0  ; add to the total 
                                                            sum
   18 00000022 F100 0004       ADD              R0, R0, #4  ; on next cycle get
                                                             the next element i
                                                            n the vector
   19 00000026 E7F6            B                loop        ; branch
   20 00000028         continue
   21 00000028 EE82 2A23       VDIV.f32         S4, S4, S7  ; divide the total 
                                                            by the number of el
                                                            ements to get the m
                                                            ean
   22 0000002C 460C            MOV              R4, R1      ; set R4 back to si
                                                            ze for next loop it
                                                            eration
   23 0000002E         varianceloop
   24 0000002E 1E64            SUBS             R4, R4, #1  ; loop counter (N =
                                                             N - 1);
   25 00000030 DB0A            BLT              done        ; counter for loop
   26 00000032 ED95 0A00       VLDR.f32         S0, [R5]    ; load array elemen
                                                            t into S0 from R5
   27 00000036 EE30 3A42       VSUB.f32         S6, S0, S4  ; subtract element 
                                                            and mean



ARM Macro Assembler    Page 2 


   28 0000003A EE23 3A03       VMUL.f32         S6, S6, S6  ; multiply the elem
                                                            ent by itself to mi
                                                            mic squaring
   29 0000003E EE72 2A83       VADD.f32         S5, S5, S6  ; add it to the var
                                                            iance element
   30 00000042 F105 0504       ADD              R5, R5, #4  ; get next element
   31 00000046 E7F2            B                varianceloop
   32 00000048         done
   33 00000048 EE82 2AA3       VDIV.f32         S4, S5, S7  ; divide by size of
                                                             the array for vari
                                                            ance
   34 0000004C ED82 2A00       VSTR.f32         S4, [R2]    ; store variance at
                                                             the address of the
                                                             floating point pas
                                                            sed 
   35 00000050 BC30            POP{R4,          R5}         ; restore context
   36 00000052 4770            BX               LR          ; return
   37 00000054         
   38 00000054                 END
              00000000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\asm_variance.d -o.\objects\asm_variance.o -I.\RTE\_GX
X_Lab1 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\CMSIS\Core\Include -IC:\Keil_v5\AR
M\PACK\ARM\CMSIS\5.4.0\CMSIS\DSP\Include -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.4.0\
Device\ARM\ARMCM4\Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VE
RSION SETA 526" --predefine="_RTE_ SETA 1" --predefine="ARMCM4_FP SETA 1" --lis
t=.\listings\asm_variance.lst asm\asm_variance.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

asm_variance 00000000

Symbol: asm_variance
   Definitions
      At line 4 in file asm\asm_variance.s
   Uses
      At line 3 in file asm\asm_variance.s
Comment: asm_variance used once
continue 00000028

Symbol: continue
   Definitions
      At line 20 in file asm\asm_variance.s
   Uses
      At line 15 in file asm\asm_variance.s
Comment: continue used once
done 00000048

Symbol: done
   Definitions
      At line 32 in file asm\asm_variance.s
   Uses
      At line 25 in file asm\asm_variance.s
Comment: done used once
loop 00000016

Symbol: loop
   Definitions
      At line 13 in file asm\asm_variance.s
   Uses
      At line 19 in file asm\asm_variance.s
Comment: loop used once
test 00000000

Symbol: test
   Definitions
      At line 1 in file asm\asm_variance.s
   Uses
      None
Comment: test unused
varianceloop 0000002E

Symbol: varianceloop
   Definitions
      At line 23 in file asm\asm_variance.s
   Uses
      At line 31 in file asm\asm_variance.s
Comment: varianceloop used once
6 symbols
343 symbols in table
